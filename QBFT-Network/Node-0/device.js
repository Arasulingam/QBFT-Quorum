const Web3 = require('web3');

async function main() {
    const web3 = new Web3("http://127.0.0.1:22000"); // your node
    const abi = [[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"deviceAddress","type":"address"},{"indexed":false,"internalType":"string","name":"deviceId","type":"string"},{"indexed":false,"internalType":"int256","name":"temperature","type":"int256"},{"indexed":false,"internalType":"string","name":"alertType","type":"string"}],"name":"AlertTriggered","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"deviceAddress","type":"address"},{"indexed":false,"internalType":"string","name":"deviceId","type":"string"},{"indexed":false,"internalType":"string","name":"location","type":"string"}],"name":"DeviceRegistered","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"deviceAddress","type":"address"},{"indexed":false,"internalType":"string","name":"deviceId","type":"string"},{"indexed":false,"internalType":"int256","name":"temperature","type":"int256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"TemperatureRecorded","type":"event"},{"inputs":[{"internalType":"address","name":"deviceAddress","type":"address"}],"name":"authorizeDevice","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"deviceAddresses","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"deviceReadings","outputs":[{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"int256","name":"temperature","type":"int256"},{"internalType":"string","name":"deviceId","type":"string"},{"internalType":"string","name":"location","type":"string"},{"internalType":"bool","name":"isValid","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"devices","outputs":[{"internalType":"string","name":"deviceId","type":"string"},{"internalType":"string","name":"location","type":"string"},{"internalType":"bool","name":"isAuthorized","type":"bool"},{"internalType":"uint256","name":"registeredAt","type":"uint256"},{"internalType":"uint256","name":"lastUpdate","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAllDevices","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"deviceAddress","type":"address"}],"name":"getDeviceInfo","outputs":[{"internalType":"string","name":"deviceId","type":"string"},{"internalType":"string","name":"location","type":"string"},{"internalType":"bool","name":"isAuthorized","type":"bool"},{"internalType":"uint256","name":"registeredAt","type":"uint256"},{"internalType":"uint256","name":"lastUpdate","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"deviceAddress","type":"address"},{"internalType":"uint256","name":"limit","type":"uint256"}],"name":"getDeviceReadings","outputs":[{"components":[{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"int256","name":"temperature","type":"int256"},{"internalType":"string","name":"deviceId","type":"string"},{"internalType":"string","name":"location","type":"string"},{"internalType":"bool","name":"isValid","type":"bool"}],"internalType":"struct IoTTemperatureMonitor.TemperatureReading[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"deviceAddress","type":"address"}],"name":"getLatestReading","outputs":[{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"int256","name":"temperature","type":"int256"},{"internalType":"string","name":"deviceId","type":"string"},{"internalType":"string","name":"location","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"deviceAddress","type":"address"}],"name":"getReadingCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"highTempThreshold","outputs":[{"internalType":"int256","name":"","type":"int256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lowTempThreshold","outputs":[{"internalType":"int256","name":"","type":"int256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"int256","name":"temperature","type":"int256"}],"name":"recordTemperature","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"deviceAddress","type":"address"},{"internalType":"string","name":"deviceId","type":"string"},{"internalType":"string","name":"location","type":"string"}],"name":"registerDevice","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"deviceAddress","type":"address"}],"name":"revokeDevice","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"int256","name":"high","type":"int256"},{"internalType":"int256","name":"low","type":"int256"}],"name":"updateThresholds","outputs":[],"stateMutability":"nonpayable","type":"function"}]]
 ;
    const contractAddress = "0xc8faf5d1672e4312bd328dabbaaada27a86e4a0e";
    const contract = new web3.eth.Contract(abi, contractAddress);

    const devices = await contract.methods.getAllDevices().call();
    console.log("Registered Devices:", devices);

    for (let addr of devices) {
        const info = await contract.methods.getDeviceInfo(addr).call();
        console.log(addr, info);
    }
}

main();
